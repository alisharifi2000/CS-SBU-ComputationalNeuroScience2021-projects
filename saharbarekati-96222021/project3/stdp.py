# -*- coding: utf-8 -*-
"""STDP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11WQPuhQB13MvmWsM-9ewRoKZF4LCDQjL
"""

!pip3 install brian2

"""#One to One Neuron"""

from brian2 import *

start_scope()


taupre = taupost = 20*ms
Apre = 0.1
Apost = -0.1
tmax = 50*ms
N = 1
eqs = '''
dv/dt = (I-v)/tau : 1
I : 1
tau : second
'''

G = NeuronGroup(1, eqs, threshold='v>1', reset='v = 0', method='exact')
G.I = [2]
G.tau = [10]*ms
H = NeuronGroup(1, eqs, threshold='v>1', reset='v = 0', method='exact')
H.I = [1.5]
H.tau = [10]*ms

S = Synapses(G, H,  '''
             w : 1
             dapre/dt = -apre/taupre : 1 (event-driven)
             dapost/dt = -apost/taupost : 1 (event-driven)
             ''',
             on_pre='''
             apre += Apre
             w = w+apost
             ''',
             on_post='''
             apost += Apost
             w = w+apre
             ''')

S.connect(i=0, j=0)

M = StateMonitor(G, 'v', record=True)
spikemon = SpikeMonitor(G)
M2 = StateMonitor(H, 'v', record=True)
spikemon2 = SpikeMonitor(H)
M3 = StateMonitor(S, 'w', record=[0])

run(100*ms)

plot(M.t/ms, M.v[0], label='Neuron 0')
plot(M2.t/ms, M2.v[0], label='Neuron 1')
xlabel('Time (ms)')
ylabel('v')
legend();

plot(spikemon.t/ms, spikemon.i, '.k')
xlabel('Time (ms)')
ylabel('Neuron index');
plot(spikemon2.t/ms, spikemon2.i + 1, '.r')
xlabel('Time (ms)')
ylabel('Neuron index');
print(spikemon.t/ms)
print(spikemon2.t/ms)

plot(list(map(lambda x: x/10, range(1000))), M3.w[0])
xlabel(r'$t$ (ms)')
ylabel(r'$w$')
axhline(0, ls='-', c='k');

t = []
for i in spikemon.t/ms:
  t.append((i, 'pre'))

for i in spikemon2.t/ms:
  t.append((i, 'post'))
t = sorted(t)
t

from  more_itertools import unique_everseen

delta_t = [0] * len(t)
x = 0
for i in range(1, len(t)):
  for j in range(i-1, -1, -1):
    if t[j][1] != t[i][1]:
      if t[i][1] == 'post':
        delta_t[x] = t[j][0] - t[i][0]
      else:
        delta_t[x] = t[i][0] - t[j][0]
      if delta_t[x] == 0:
        x-=1
      break
  x+=1
print(delta_t)
w = M3.w[0]
delta_w = w
unique_w = list(unique_everseen(w))
print(unique_w)
for i in range(1, len(unique_w)):
  delta_w[i - 1] = unique_w[i] - unique_w[i-1]

  print(delta_w[i - 1], delta_t[i - 1])

print(len(delta_t), len(unique_w))
plt.scatter(delta_t[:len(unique_w)-1], delta_w[:len(unique_w)-1])

"""#20 Neuron"""

start_scope()
 
taupre = taupost = 20*ms
Apre = 0.01
Apost = -Apre*taupre/taupost*1.05
tmax = 50*ms
N = 20
 
G = NeuronGroup(N, 'tspike:second', threshold='t>tspike', refractory=100*ms)
H = NeuronGroup(N, 'tspike:second', threshold='t>tspike', refractory=100*ms)
G.tspike = 'i*tmax/(N-1)'
H.tspike = '(N-1-i)*tmax/(N-1)'
 
S = Synapses(G, H,
             '''
             w : 1
             dapre/dt = -apre/taupre : 1 (event-driven)
             dapost/dt = -apost/taupost : 1 (event-driven)
             ''',
             on_pre='''
             apre += Apre
             w = w+apost
             ''',
             on_post='''
             apost += Apost
             w = w+apre
             ''')
S.connect(j='i')
 
run(tmax+1*ms)
 
plot((H.tspike-G.tspike)/ms, S.w)
xlabel(r'$\Delta t$ (ms)')
ylabel(r'$\Delta w$')